// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmds.proto

package cmds

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subscription struct {
	SubscriberId         string   `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	ListingId            string   `protobuf:"bytes,2,opt,name=listingId,proto3" json:"listingId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f40097a7607b17, []int{0}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

func (m *Subscription) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

type AddSubscriptionResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSubscriptionResponse) Reset()         { *m = AddSubscriptionResponse{} }
func (m *AddSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*AddSubscriptionResponse) ProtoMessage()    {}
func (*AddSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f40097a7607b17, []int{1}
}

func (m *AddSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSubscriptionResponse.Unmarshal(m, b)
}
func (m *AddSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *AddSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSubscriptionResponse.Merge(m, src)
}
func (m *AddSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_AddSubscriptionResponse.Size(m)
}
func (m *AddSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSubscriptionResponse proto.InternalMessageInfo

func (m *AddSubscriptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SubscribeRequest struct {
	SubscriberId         string   `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f40097a7607b17, []int{2}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

type BookLine struct {
	BidSize              string   `protobuf:"bytes,1,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	BidPrice             string   `protobuf:"bytes,2,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	AskSize              string   `protobuf:"bytes,3,opt,name=askSize,proto3" json:"askSize,omitempty"`
	AskPrice             string   `protobuf:"bytes,4,opt,name=askPrice,proto3" json:"askPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookLine) Reset()         { *m = BookLine{} }
func (m *BookLine) String() string { return proto.CompactTextString(m) }
func (*BookLine) ProtoMessage()    {}
func (*BookLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f40097a7607b17, []int{3}
}

func (m *BookLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookLine.Unmarshal(m, b)
}
func (m *BookLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookLine.Marshal(b, m, deterministic)
}
func (m *BookLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookLine.Merge(m, src)
}
func (m *BookLine) XXX_Size() int {
	return xxx_messageInfo_BookLine.Size(m)
}
func (m *BookLine) XXX_DiscardUnknown() {
	xxx_messageInfo_BookLine.DiscardUnknown(m)
}

var xxx_messageInfo_BookLine proto.InternalMessageInfo

func (m *BookLine) GetBidSize() string {
	if m != nil {
		return m.BidSize
	}
	return ""
}

func (m *BookLine) GetBidPrice() string {
	if m != nil {
		return m.BidPrice
	}
	return ""
}

func (m *BookLine) GetAskSize() string {
	if m != nil {
		return m.AskSize
	}
	return ""
}

func (m *BookLine) GetAskPrice() string {
	if m != nil {
		return m.AskPrice
	}
	return ""
}

type Book struct {
	ListingId            string      `protobuf:"bytes,1,opt,name=listingId,proto3" json:"listingId,omitempty"`
	Depth                []*BookLine `protobuf:"bytes,2,rep,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f40097a7607b17, []int{4}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *Book) GetDepth() []*BookLine {
	if m != nil {
		return m.Depth
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscription)(nil), "clientmarketdataservice.Subscription")
	proto.RegisterType((*AddSubscriptionResponse)(nil), "clientmarketdataservice.AddSubscriptionResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "clientmarketdataservice.SubscribeRequest")
	proto.RegisterType((*BookLine)(nil), "clientmarketdataservice.BookLine")
	proto.RegisterType((*Book)(nil), "clientmarketdataservice.Book")
}

func init() { proto.RegisterFile("cmds.proto", fileDescriptor_99f40097a7607b17) }

var fileDescriptor_99f40097a7607b17 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x57, 0x37, 0xe7, 0xf6, 0x1c, 0x28, 0xb9, 0x6c, 0x0c, 0x05, 0x0d, 0x08, 0xf3, 0x32,
	0xc6, 0x06, 0x7a, 0x76, 0x7a, 0x11, 0x14, 0x46, 0x7b, 0x52, 0xf0, 0xd0, 0x36, 0x8f, 0x19, 0xb6,
	0x35, 0x35, 0xc9, 0x76, 0xf0, 0xcf, 0xf5, 0x2f, 0x31, 0x4d, 0xda, 0xba, 0x0d, 0xaa, 0xde, 0xf2,
	0x85, 0xdf, 0xf7, 0xbd, 0xbc, 0xf7, 0x02, 0x10, 0xaf, 0x98, 0x1a, 0xa6, 0x52, 0x68, 0x41, 0xba,
	0xf1, 0x92, 0x63, 0xa2, 0x57, 0xa1, 0x5c, 0xa0, 0x66, 0xa1, 0x0e, 0x15, 0xca, 0x0d, 0x8f, 0x91,
	0xce, 0xa0, 0x13, 0xac, 0x23, 0x15, 0x4b, 0x9e, 0x6a, 0x2e, 0x12, 0x42, 0xa1, 0xa3, 0x9c, 0x8e,
	0x50, 0x3e, 0xb2, 0x9e, 0x77, 0xe1, 0x0d, 0xda, 0xfe, 0xce, 0x1d, 0x39, 0x83, 0xf6, 0x92, 0x2b,
	0xcd, 0x93, 0xb9, 0x01, 0x0e, 0x2c, 0xf0, 0x73, 0x41, 0x27, 0xd0, 0xbd, 0x63, 0x6c, 0x3b, 0xd4,
	0x47, 0x95, 0x8a, 0x44, 0x21, 0xe9, 0xc1, 0xd1, 0x0a, 0x95, 0x0a, 0xe7, 0x98, 0xe7, 0x16, 0x92,
	0xde, 0xc0, 0x69, 0x50, 0x94, 0xf0, 0xf1, 0x63, 0x8d, 0x4a, 0xff, 0xe7, 0x29, 0x74, 0x03, 0xad,
	0xa9, 0x10, 0x8b, 0x27, 0x9e, 0xd8, 0xf4, 0x88, 0xb3, 0x80, 0x7f, 0x96, 0xe9, 0xb9, 0x24, 0x7d,
	0x68, 0x99, 0xe3, 0x4c, 0x9a, 0x86, 0xf3, 0xf7, 0x96, 0x3a, 0x73, 0x85, 0x6a, 0x61, 0x5d, 0x75,
	0xe7, 0xca, 0x65, 0xe6, 0x32, 0x47, 0xe7, 0x6a, 0x38, 0x57, 0xa1, 0xe9, 0x1b, 0x34, 0xb2, 0xba,
	0xbb, 0xa3, 0xf0, 0xf6, 0x46, 0x41, 0x6e, 0xe1, 0x90, 0x61, 0xaa, 0xdf, 0x4d, 0xd1, 0xfa, 0xe0,
	0x78, 0x7c, 0x39, 0xac, 0xd8, 0xc2, 0xb0, 0xe8, 0xc1, 0x77, 0xfc, 0xf8, 0xcb, 0x83, 0xee, 0xbd,
	0x65, 0x9f, 0x2d, 0xfb, 0x60, 0xd8, 0xc0, 0xb1, 0x64, 0x09, 0x27, 0x7b, 0xf3, 0x25, 0x57, 0x95,
	0xc1, 0xdb, 0x58, 0x7f, 0x54, 0x89, 0x55, 0x2c, 0x8c, 0xd6, 0xc8, 0x0b, 0xb4, 0xcb, 0xc5, 0x90,
	0xeb, 0xbf, 0xea, 0x94, 0xcb, 0xeb, 0x9f, 0xff, 0xda, 0x2b, 0xad, 0x8d, 0xbc, 0x69, 0xf3, 0xb5,
	0x91, 0xfd, 0xd0, 0xa8, 0x69, 0xbf, 0xe8, 0xe4, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x75, 0xac,
	0x5a, 0xb0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientMarketDataServiceClient is the client API for ClientMarketDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientMarketDataServiceClient interface {
	AddSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*AddSubscriptionResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ClientMarketDataService_SubscribeClient, error)
}

type clientMarketDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewClientMarketDataServiceClient(cc *grpc.ClientConn) ClientMarketDataServiceClient {
	return &clientMarketDataServiceClient{cc}
}

func (c *clientMarketDataServiceClient) AddSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*AddSubscriptionResponse, error) {
	out := new(AddSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/clientmarketdataservice.ClientMarketDataService/AddSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMarketDataServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ClientMarketDataService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientMarketDataService_serviceDesc.Streams[0], "/clientmarketdataservice.ClientMarketDataService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientMarketDataServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ClientMarketDataService_SubscribeClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type clientMarketDataServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *clientMarketDataServiceSubscribeClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClientMarketDataServiceServer is the server API for ClientMarketDataService service.
type ClientMarketDataServiceServer interface {
	AddSubscription(context.Context, *Subscription) (*AddSubscriptionResponse, error)
	Subscribe(*SubscribeRequest, ClientMarketDataService_SubscribeServer) error
}

// UnimplementedClientMarketDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientMarketDataServiceServer struct {
}

func (*UnimplementedClientMarketDataServiceServer) AddSubscription(ctx context.Context, req *Subscription) (*AddSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSubscription not implemented")
}
func (*UnimplementedClientMarketDataServiceServer) Subscribe(req *SubscribeRequest, srv ClientMarketDataService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterClientMarketDataServiceServer(s *grpc.Server, srv ClientMarketDataServiceServer) {
	s.RegisterService(&_ClientMarketDataService_serviceDesc, srv)
}

func _ClientMarketDataService_AddSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMarketDataServiceServer).AddSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clientmarketdataservice.ClientMarketDataService/AddSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMarketDataServiceServer).AddSubscription(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMarketDataService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ClientMarketDataServiceServer).Subscribe(m, &clientMarketDataServiceSubscribeServer{stream})
}

type ClientMarketDataService_SubscribeServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type clientMarketDataServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *clientMarketDataServiceSubscribeServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

var _ClientMarketDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clientmarketdataservice.ClientMarketDataService",
	HandlerType: (*ClientMarketDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSubscription",
			Handler:    _ClientMarketDataService_AddSubscription_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ClientMarketDataService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cmds.proto",
}
