// Code generated by protoc-gen-go. DO NOT EDIT.
// source: listing.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A listing represents an instance of an instrument on a given exchange
//for example MSFT can be traded on both Nasdaq IEX, thus there would be at least
//two listings for MSFT, one for each exchange
type Listing struct {
	Version              int32       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Id                   int32       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Market               *Market     `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
	Instrument           *Instrument `protobuf:"bytes,4,opt,name=instrument,proto3" json:"instrument,omitempty"`
	MarketSymbol         string      `protobuf:"bytes,5,opt,name=marketSymbol,proto3" json:"marketSymbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Listing) Reset()         { *m = Listing{} }
func (m *Listing) String() string { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()    {}
func (*Listing) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb6b76026c8ca063, []int{0}
}

func (m *Listing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Listing.Unmarshal(m, b)
}
func (m *Listing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Listing.Marshal(b, m, deterministic)
}
func (m *Listing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Listing.Merge(m, src)
}
func (m *Listing) XXX_Size() int {
	return xxx_messageInfo_Listing.Size(m)
}
func (m *Listing) XXX_DiscardUnknown() {
	xxx_messageInfo_Listing.DiscardUnknown(m)
}

var xxx_messageInfo_Listing proto.InternalMessageInfo

func (m *Listing) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Listing) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Listing) GetMarket() *Market {
	if m != nil {
		return m.Market
	}
	return nil
}

func (m *Listing) GetInstrument() *Instrument {
	if m != nil {
		return m.Instrument
	}
	return nil
}

func (m *Listing) GetMarketSymbol() string {
	if m != nil {
		return m.MarketSymbol
	}
	return ""
}

func init() {
	proto.RegisterType((*Listing)(nil), "model.Listing")
}

func init() { proto.RegisterFile("listing.proto", fileDescriptor_eb6b76026c8ca063) }

var fileDescriptor_eb6b76026c8ca063 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xc9, 0x2c, 0x2e,
	0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd, 0xcd, 0x4f, 0x49, 0xcd,
	0x91, 0x12, 0xc8, 0xcc, 0x2b, 0x2e, 0x29, 0x2a, 0xcd, 0x4d, 0xcd, 0x2b, 0x81, 0x48, 0x48, 0xf1,
	0xe4, 0x26, 0x16, 0x65, 0xa7, 0x42, 0x79, 0x4a, 0x1b, 0x19, 0xb9, 0xd8, 0x7d, 0x20, 0x1a, 0x85,
	0x24, 0xb8, 0xd8, 0xcb, 0x52, 0x8b, 0x8a, 0x33, 0xf3, 0xf3, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58,
	0x83, 0x60, 0x5c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x26, 0xb0, 0x20, 0x90, 0x25, 0xa4,
	0xca, 0xc5, 0x06, 0x31, 0x45, 0x82, 0x19, 0x28, 0xc6, 0x6d, 0xc4, 0xab, 0x07, 0xb6, 0x4d, 0xcf,
	0x17, 0x2c, 0x18, 0x04, 0x95, 0x14, 0x32, 0xe4, 0xe2, 0x42, 0x58, 0x2f, 0xc1, 0x02, 0x56, 0x2a,
	0x08, 0x55, 0xea, 0x09, 0x97, 0x08, 0x42, 0x52, 0x24, 0xa4, 0xc4, 0x05, 0x75, 0x5f, 0x70, 0x65,
	0x6e, 0x52, 0x7e, 0x8e, 0x04, 0x2b, 0x50, 0x13, 0x67, 0x10, 0x8a, 0x98, 0x13, 0x7b, 0x14, 0xc4,
	0x73, 0x49, 0x6c, 0x60, 0x3f, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x31, 0x00, 0x50, 0x01,
	0xfb, 0x00, 0x00, 0x00,
}
