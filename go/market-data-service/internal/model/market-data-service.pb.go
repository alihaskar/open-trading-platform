// Code generated by protoc-gen-go. DO NOT EDIT.
// source: market-data-service.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subscription struct {
	SubscriberId         string   `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	ListingId            int32    `protobuf:"varint,2,opt,name=listingId,proto3" json:"listingId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d3bea125c825790, []int{0}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

func (m *Subscription) GetListingId() int32 {
	if m != nil {
		return m.ListingId
	}
	return 0
}

type AddSubscriptionResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSubscriptionResponse) Reset()         { *m = AddSubscriptionResponse{} }
func (m *AddSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*AddSubscriptionResponse) ProtoMessage()    {}
func (*AddSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d3bea125c825790, []int{1}
}

func (m *AddSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSubscriptionResponse.Unmarshal(m, b)
}
func (m *AddSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *AddSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSubscriptionResponse.Merge(m, src)
}
func (m *AddSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_AddSubscriptionResponse.Size(m)
}
func (m *AddSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSubscriptionResponse proto.InternalMessageInfo

func (m *AddSubscriptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SubscribeRequest struct {
	SubscriberId         string   `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d3bea125c825790, []int{2}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

type DepthLine struct {
	BidSize              *Decimal64 `protobuf:"bytes,1,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	BidPrice             *Decimal64 `protobuf:"bytes,2,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	AskSize              *Decimal64 `protobuf:"bytes,3,opt,name=askSize,proto3" json:"askSize,omitempty"`
	AskPrice             *Decimal64 `protobuf:"bytes,4,opt,name=askPrice,proto3" json:"askPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DepthLine) Reset()         { *m = DepthLine{} }
func (m *DepthLine) String() string { return proto.CompactTextString(m) }
func (*DepthLine) ProtoMessage()    {}
func (*DepthLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d3bea125c825790, []int{3}
}

func (m *DepthLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthLine.Unmarshal(m, b)
}
func (m *DepthLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthLine.Marshal(b, m, deterministic)
}
func (m *DepthLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthLine.Merge(m, src)
}
func (m *DepthLine) XXX_Size() int {
	return xxx_messageInfo_DepthLine.Size(m)
}
func (m *DepthLine) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthLine.DiscardUnknown(m)
}

var xxx_messageInfo_DepthLine proto.InternalMessageInfo

func (m *DepthLine) GetBidSize() *Decimal64 {
	if m != nil {
		return m.BidSize
	}
	return nil
}

func (m *DepthLine) GetBidPrice() *Decimal64 {
	if m != nil {
		return m.BidPrice
	}
	return nil
}

func (m *DepthLine) GetAskSize() *Decimal64 {
	if m != nil {
		return m.AskSize
	}
	return nil
}

func (m *DepthLine) GetAskPrice() *Decimal64 {
	if m != nil {
		return m.AskPrice
	}
	return nil
}

type Quote struct {
	ListingId            int32        `protobuf:"varint,1,opt,name=listingId,proto3" json:"listingId,omitempty"`
	Depth                []*DepthLine `protobuf:"bytes,2,rep,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Quote) Reset()         { *m = Quote{} }
func (m *Quote) String() string { return proto.CompactTextString(m) }
func (*Quote) ProtoMessage()    {}
func (*Quote) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d3bea125c825790, []int{4}
}

func (m *Quote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quote.Unmarshal(m, b)
}
func (m *Quote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quote.Marshal(b, m, deterministic)
}
func (m *Quote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quote.Merge(m, src)
}
func (m *Quote) XXX_Size() int {
	return xxx_messageInfo_Quote.Size(m)
}
func (m *Quote) XXX_DiscardUnknown() {
	xxx_messageInfo_Quote.DiscardUnknown(m)
}

var xxx_messageInfo_Quote proto.InternalMessageInfo

func (m *Quote) GetListingId() int32 {
	if m != nil {
		return m.ListingId
	}
	return 0
}

func (m *Quote) GetDepth() []*DepthLine {
	if m != nil {
		return m.Depth
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscription)(nil), "marketdataservice.Subscription")
	proto.RegisterType((*AddSubscriptionResponse)(nil), "marketdataservice.AddSubscriptionResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "marketdataservice.SubscribeRequest")
	proto.RegisterType((*DepthLine)(nil), "marketdataservice.DepthLine")
	proto.RegisterType((*Quote)(nil), "marketdataservice.Quote")
}

func init() { proto.RegisterFile("market-data-service.proto", fileDescriptor_2d3bea125c825790) }

var fileDescriptor_2d3bea125c825790 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4f, 0xc2, 0x30,
	0x18, 0x86, 0x19, 0x38, 0x71, 0x85, 0x44, 0xe8, 0xc5, 0x49, 0x48, 0x24, 0xf5, 0x42, 0x88, 0x2c,
	0x66, 0x18, 0xee, 0x1a, 0x2e, 0x24, 0x6a, 0x70, 0x3b, 0xe9, 0xc9, 0x6e, 0xfd, 0x82, 0x0d, 0x6c,
	0x9d, 0x6b, 0xf1, 0xe0, 0x9f, 0xf3, 0xe4, 0xff, 0x32, 0xdb, 0xd8, 0x04, 0xdc, 0x12, 0x8f, 0xed,
	0xf7, 0xe4, 0xd9, 0xbe, 0xf7, 0x2d, 0x3a, 0x0f, 0x68, 0xbc, 0x02, 0x35, 0x66, 0x54, 0xd1, 0xb1,
	0x84, 0xf8, 0x83, 0xfb, 0x60, 0x45, 0xb1, 0x50, 0x02, 0x77, 0xb3, 0x51, 0x32, 0xd9, 0x0e, 0x7a,
	0x6d, 0x5f, 0x04, 0x81, 0x08, 0x33, 0x80, 0x2c, 0x50, 0xdb, 0xdd, 0x78, 0xd2, 0x8f, 0x79, 0xa4,
	0xb8, 0x08, 0x31, 0x41, 0x6d, 0x99, 0x9d, 0x3d, 0x88, 0xe7, 0xcc, 0xd4, 0x06, 0xda, 0xd0, 0x70,
	0xf6, 0xee, 0x70, 0x1f, 0x19, 0x6b, 0x2e, 0x15, 0x0f, 0x97, 0x73, 0x66, 0xd6, 0x07, 0xda, 0x50,
	0x77, 0x7e, 0x2f, 0xc8, 0x04, 0x9d, 0xdd, 0x32, 0xb6, 0x2b, 0x75, 0x40, 0x46, 0x22, 0x94, 0x80,
	0x4d, 0xd4, 0x0c, 0x40, 0x4a, 0xba, 0x84, 0xad, 0x37, 0x3f, 0x92, 0x29, 0xea, 0xb8, 0xf9, 0x27,
	0x1c, 0x78, 0xdf, 0x80, 0x54, 0xff, 0xf9, 0x15, 0xf2, 0xa5, 0x21, 0x63, 0x06, 0x91, 0x7a, 0xbb,
	0xe7, 0x21, 0xe0, 0x11, 0x6a, 0x7a, 0x9c, 0xb9, 0xfc, 0x33, 0xf3, 0xb7, 0xec, 0x8e, 0x15, 0x08,
	0x06, 0x6b, 0x6b, 0x06, 0x3e, 0x0f, 0xe8, 0x7a, 0x7a, 0xe3, 0xe4, 0x00, 0xbe, 0x42, 0x27, 0x1e,
	0x67, 0x8b, 0x98, 0xfb, 0x90, 0xee, 0x50, 0x06, 0x17, 0x44, 0x62, 0xa6, 0x72, 0x95, 0x9a, 0x1b,
	0x55, 0xe6, 0x2d, 0x90, 0x98, 0xa9, 0x5c, 0x65, 0xe6, 0xa3, 0x2a, 0x73, 0x4e, 0x90, 0x67, 0xa4,
	0x3f, 0x6d, 0x84, 0x82, 0xfd, 0x54, 0xb5, 0x83, 0x54, 0xb1, 0x8d, 0x74, 0x96, 0xec, 0x69, 0xd6,
	0x07, 0x8d, 0x61, 0xcb, 0xee, 0x5b, 0x7f, 0x8a, 0xb5, 0x8a, 0x1c, 0x9c, 0x0c, 0xb5, 0xbf, 0x35,
	0xd4, 0x7d, 0x48, 0xb1, 0x19, 0x55, 0xd4, 0xcd, 0x30, 0xfc, 0x8a, 0x4e, 0x0f, 0xfa, 0xc1, 0x17,
	0x25, 0xb6, 0x5d, 0xa0, 0x37, 0x2a, 0x01, 0x2a, 0x4a, 0x26, 0x35, 0xfc, 0x88, 0x8c, 0xa2, 0x4c,
	0x7c, 0x59, 0xed, 0x2e, 0xaa, 0xee, 0x99, 0x25, 0x50, 0x9a, 0x0a, 0xa9, 0x5d, 0x6b, 0x77, 0xcd,
	0x17, 0x3d, 0xcd, 0xcf, 0x3b, 0x4e, 0xdf, 0xec, 0xe4, 0x27, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x5a,
	0xc3, 0xf0, 0xf1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MarketDataServiceClient is the client API for MarketDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarketDataServiceClient interface {
	AddSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*AddSubscriptionResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (MarketDataService_SubscribeClient, error)
}

type marketDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMarketDataServiceClient(cc *grpc.ClientConn) MarketDataServiceClient {
	return &marketDataServiceClient{cc}
}

func (c *marketDataServiceClient) AddSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*AddSubscriptionResponse, error) {
	out := new(AddSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/marketdataservice.MarketDataService/AddSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketDataServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (MarketDataService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MarketDataService_serviceDesc.Streams[0], "/marketdataservice.MarketDataService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &marketDataServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MarketDataService_SubscribeClient interface {
	Recv() (*Quote, error)
	grpc.ClientStream
}

type marketDataServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *marketDataServiceSubscribeClient) Recv() (*Quote, error) {
	m := new(Quote)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MarketDataServiceServer is the server API for MarketDataService service.
type MarketDataServiceServer interface {
	AddSubscription(context.Context, *Subscription) (*AddSubscriptionResponse, error)
	Subscribe(*SubscribeRequest, MarketDataService_SubscribeServer) error
}

// UnimplementedMarketDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMarketDataServiceServer struct {
}

func (*UnimplementedMarketDataServiceServer) AddSubscription(ctx context.Context, req *Subscription) (*AddSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSubscription not implemented")
}
func (*UnimplementedMarketDataServiceServer) Subscribe(req *SubscribeRequest, srv MarketDataService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterMarketDataServiceServer(s *grpc.Server, srv MarketDataServiceServer) {
	s.RegisterService(&_MarketDataService_serviceDesc, srv)
}

func _MarketDataService_AddSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketDataServiceServer).AddSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketdataservice.MarketDataService/AddSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketDataServiceServer).AddSubscription(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketDataService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MarketDataServiceServer).Subscribe(m, &marketDataServiceSubscribeServer{stream})
}

type MarketDataService_SubscribeServer interface {
	Send(*Quote) error
	grpc.ServerStream
}

type marketDataServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *marketDataServiceSubscribeServer) Send(m *Quote) error {
	return x.ServerStream.SendMsg(m)
}

var _MarketDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "marketdataservice.MarketDataService",
	HandlerType: (*MarketDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSubscription",
			Handler:    _MarketDataService_AddSubscription_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _MarketDataService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "market-data-service.proto",
}
