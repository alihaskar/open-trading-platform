// Code generated by protoc-gen-go. DO NOT EDIT.
// source: execution-venue.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateAndRouteOrderParams struct {
	Side                 Side       `protobuf:"varint,1,opt,name=side,proto3,enum=model.Side" json:"side,omitempty"`
	Quantity             *Decimal64 `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                *Decimal64 `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	ListingId            string     `protobuf:"bytes,4,opt,name=listingId,proto3" json:"listingId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateAndRouteOrderParams) Reset()         { *m = CreateAndRouteOrderParams{} }
func (m *CreateAndRouteOrderParams) String() string { return proto.CompactTextString(m) }
func (*CreateAndRouteOrderParams) ProtoMessage()    {}
func (*CreateAndRouteOrderParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e713cef76353d320, []int{0}
}

func (m *CreateAndRouteOrderParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAndRouteOrderParams.Unmarshal(m, b)
}
func (m *CreateAndRouteOrderParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAndRouteOrderParams.Marshal(b, m, deterministic)
}
func (m *CreateAndRouteOrderParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAndRouteOrderParams.Merge(m, src)
}
func (m *CreateAndRouteOrderParams) XXX_Size() int {
	return xxx_messageInfo_CreateAndRouteOrderParams.Size(m)
}
func (m *CreateAndRouteOrderParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAndRouteOrderParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAndRouteOrderParams proto.InternalMessageInfo

func (m *CreateAndRouteOrderParams) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_BUY
}

func (m *CreateAndRouteOrderParams) GetQuantity() *Decimal64 {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *CreateAndRouteOrderParams) GetPrice() *Decimal64 {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *CreateAndRouteOrderParams) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

type OrderId struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e713cef76353d320, []int{1}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateAndRouteOrderParams)(nil), "executionvenue.CreateAndRouteOrderParams")
	proto.RegisterType((*OrderId)(nil), "executionvenue.OrderId")
}

func init() { proto.RegisterFile("execution-venue.proto", fileDescriptor_e713cef76353d320) }

var fileDescriptor_e713cef76353d320 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x57, 0xb7, 0x39, 0x97, 0xca, 0x90, 0x88, 0x5a, 0xab, 0xa0, 0x54, 0x10, 0x05, 0xcd,
	0x60, 0x8a, 0x67, 0x75, 0xee, 0xb0, 0x93, 0x52, 0xc1, 0x83, 0x9e, 0xb2, 0xe6, 0xef, 0x08, 0x34,
	0x49, 0xcd, 0x52, 0x71, 0x9f, 0x4a, 0x3f, 0xa2, 0x6b, 0xd2, 0x4e, 0x14, 0x7b, 0xeb, 0xff, 0xbd,
	0x1f, 0xe5, 0xe5, 0x3d, 0xb4, 0x05, 0x1f, 0x90, 0xe4, 0x86, 0x2b, 0x79, 0xfe, 0x0e, 0x32, 0x07,
	0x92, 0x69, 0x65, 0x14, 0xee, 0x2d, 0x65, 0xab, 0x86, 0x7b, 0x53, 0xa5, 0xa6, 0x29, 0xf4, 0xad,
	0x3b, 0xc9, 0x5f, 0xfb, 0x20, 0x32, 0x33, 0x77, 0x70, 0xe8, 0x2b, 0xcd, 0x40, 0x97, 0xc7, 0x7a,
	0xa2, 0x84, 0x50, 0xd2, 0x5d, 0xd1, 0x97, 0x87, 0x76, 0x87, 0x1a, 0xa8, 0x81, 0x1b, 0xc9, 0x62,
	0x95, 0x1b, 0xb8, 0x2f, 0xd8, 0x07, 0xaa, 0xa9, 0x98, 0xe1, 0x03, 0xd4, 0x9a, 0x71, 0x06, 0x81,
	0x77, 0xe8, 0x9d, 0xf4, 0x06, 0x3e, 0x11, 0x8a, 0x41, 0x4a, 0x1e, 0x17, 0x52, 0x6c, 0x0d, 0x7c,
	0x86, 0xd6, 0xde, 0x72, 0x2a, 0x0d, 0x37, 0xf3, 0x60, 0x65, 0x01, 0xf9, 0x83, 0x8d, 0x12, 0xba,
	0x83, 0x84, 0x0b, 0x9a, 0x5e, 0x5d, 0xc6, 0x4b, 0x02, 0x1f, 0xa3, 0x76, 0xa6, 0x79, 0x02, 0x41,
	0xb3, 0x06, 0x75, 0x36, 0xde, 0x47, 0xdd, 0x94, 0xcf, 0x0c, 0x97, 0xd3, 0x31, 0x0b, 0x5a, 0x0b,
	0xb6, 0x1b, 0xff, 0x08, 0xd1, 0x11, 0xea, 0xd8, 0x8c, 0x63, 0x86, 0x03, 0xd4, 0x51, 0xee, 0xd3,
	0x46, 0xec, 0xc6, 0xd5, 0x39, 0xf8, 0xf4, 0x50, 0x6f, 0x54, 0x55, 0xf4, 0x54, 0x54, 0x84, 0x5f,
	0xd0, 0xe6, 0x3f, 0x2f, 0xc5, 0xa7, 0xe4, 0x77, 0x95, 0xa4, 0xb6, 0x8e, 0x70, 0xe7, 0x2f, 0x5a,
	0xe6, 0x88, 0x1a, 0xf8, 0x1a, 0xf9, 0x43, 0x2a, 0x13, 0x48, 0xdd, 0x4f, 0xeb, 0xc8, 0x70, 0x9b,
	0xb8, 0xa1, 0x48, 0x35, 0x14, 0x19, 0x15, 0x43, 0x45, 0x8d, 0xdb, 0xf6, 0x73, 0x93, 0x66, 0x7c,
	0xb2, 0x6a, 0x8d, 0x8b, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x8a, 0xf8, 0x06, 0xf8, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecutionVenueClient is the client API for ExecutionVenue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutionVenueClient interface {
	CreateAndRouteOrder(ctx context.Context, in *CreateAndRouteOrderParams, opts ...grpc.CallOption) (*OrderId, error)
	CancelOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error)
}

type executionVenueClient struct {
	cc *grpc.ClientConn
}

func NewExecutionVenueClient(cc *grpc.ClientConn) ExecutionVenueClient {
	return &executionVenueClient{cc}
}

func (c *executionVenueClient) CreateAndRouteOrder(ctx context.Context, in *CreateAndRouteOrderParams, opts ...grpc.CallOption) (*OrderId, error) {
	out := new(OrderId)
	err := c.cc.Invoke(ctx, "/executionvenue.ExecutionVenue/CreateAndRouteOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionVenueClient) CancelOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/executionvenue.ExecutionVenue/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutionVenueServer is the server API for ExecutionVenue service.
type ExecutionVenueServer interface {
	CreateAndRouteOrder(context.Context, *CreateAndRouteOrderParams) (*OrderId, error)
	CancelOrder(context.Context, *OrderId) (*empty.Empty, error)
}

// UnimplementedExecutionVenueServer can be embedded to have forward compatible implementations.
type UnimplementedExecutionVenueServer struct {
}

func (*UnimplementedExecutionVenueServer) CreateAndRouteOrder(ctx context.Context, req *CreateAndRouteOrderParams) (*OrderId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAndRouteOrder not implemented")
}
func (*UnimplementedExecutionVenueServer) CancelOrder(ctx context.Context, req *OrderId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOrder not implemented")
}

func RegisterExecutionVenueServer(s *grpc.Server, srv ExecutionVenueServer) {
	s.RegisterService(&_ExecutionVenue_serviceDesc, srv)
}

func _ExecutionVenue_CreateAndRouteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAndRouteOrderParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionVenueServer).CreateAndRouteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/executionvenue.ExecutionVenue/CreateAndRouteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionVenueServer).CreateAndRouteOrder(ctx, req.(*CreateAndRouteOrderParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExecutionVenue_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionVenueServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/executionvenue.ExecutionVenue/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionVenueServer).CancelOrder(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExecutionVenue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "executionvenue.ExecutionVenue",
	HandlerType: (*ExecutionVenueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAndRouteOrder",
			Handler:    _ExecutionVenue_CreateAndRouteOrder_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _ExecutionVenue_CancelOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "execution-venue.proto",
}
