/* eslint-disable */
// source: order.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var modelcommon_pb = require('./modelcommon_pb.js');
goog.object.extend(proto, modelcommon_pb);
goog.exportSymbol('proto.model.Order', null, global);
goog.exportSymbol('proto.model.OrderStatus', null, global);
goog.exportSymbol('proto.model.Side', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Order.displayName = 'proto.model.Order';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    side: jspb.Message.getFieldWithDefault(msg, 3, 0),
    quantity: (f = msg.getQuantity()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    listingid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    remainingquantity: (f = msg.getRemainingquantity()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    tradedquantity: (f = msg.getTradedquantity()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    avgtradeprice: (f = msg.getAvgtradeprice()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    targetstatus: jspb.Message.getFieldWithDefault(msg, 11, 0),
    created: (f = msg.getCreated()) && modelcommon_pb.Timestamp.toObject(includeInstance, f),
    placedwithexecvenueid: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Order}
 */
proto.model.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Order;
  return proto.model.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Order}
 */
proto.model.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {!proto.model.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 4:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 5:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListingid(value);
      break;
    case 7:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setRemainingquantity(value);
      break;
    case 8:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setTradedquantity(value);
      break;
    case 9:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setAvgtradeprice(value);
      break;
    case 10:
      var value = /** @type {!proto.model.OrderStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {!proto.model.OrderStatus} */ (reader.readEnum());
      msg.setTargetstatus(value);
      break;
    case 12:
      var value = new modelcommon_pb.Timestamp;
      reader.readMessage(value,modelcommon_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacedwithexecvenueid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getListingid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getRemainingquantity();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getTradedquantity();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getAvgtradeprice();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getTargetstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      modelcommon_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlacedwithexecvenueid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.model.Order.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.model.Order.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Side side = 3;
 * @return {!proto.model.Side}
 */
proto.model.Order.prototype.getSide = function() {
  return /** @type {!proto.model.Side} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.model.Side} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Decimal64 quantity = 4;
 * @return {?proto.model.Decimal64}
 */
proto.model.Order.prototype.getQuantity = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 4));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setQuantity = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearQuantity = function() {
  return this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Decimal64 price = 5;
 * @return {?proto.model.Decimal64}
 */
proto.model.Order.prototype.getPrice = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 5));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 listingId = 6;
 * @return {number}
 */
proto.model.Order.prototype.getListingid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setListingid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Decimal64 remainingQuantity = 7;
 * @return {?proto.model.Decimal64}
 */
proto.model.Order.prototype.getRemainingquantity = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 7));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setRemainingquantity = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearRemainingquantity = function() {
  return this.setRemainingquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasRemainingquantity = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Decimal64 tradedQuantity = 8;
 * @return {?proto.model.Decimal64}
 */
proto.model.Order.prototype.getTradedquantity = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 8));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setTradedquantity = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearTradedquantity = function() {
  return this.setTradedquantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasTradedquantity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Decimal64 avgTradePrice = 9;
 * @return {?proto.model.Decimal64}
 */
proto.model.Order.prototype.getAvgtradeprice = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 9));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setAvgtradeprice = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearAvgtradeprice = function() {
  return this.setAvgtradeprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasAvgtradeprice = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional OrderStatus status = 10;
 * @return {!proto.model.OrderStatus}
 */
proto.model.Order.prototype.getStatus = function() {
  return /** @type {!proto.model.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.model.OrderStatus} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional OrderStatus targetStatus = 11;
 * @return {!proto.model.OrderStatus}
 */
proto.model.Order.prototype.getTargetstatus = function() {
  return /** @type {!proto.model.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.model.OrderStatus} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setTargetstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Timestamp created = 12;
 * @return {?proto.model.Timestamp}
 */
proto.model.Order.prototype.getCreated = function() {
  return /** @type{?proto.model.Timestamp} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Timestamp, 12));
};


/**
 * @param {?proto.model.Timestamp|undefined} value
 * @return {!proto.model.Order} returns this
*/
proto.model.Order.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Order.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string placedWithExecVenueId = 13;
 * @return {string}
 */
proto.model.Order.prototype.getPlacedwithexecvenueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Order} returns this
 */
proto.model.Order.prototype.setPlacedwithexecvenueid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * @enum {number}
 */
proto.model.Side = {
  BUY: 0,
  SELL: 1
};

/**
 * @enum {number}
 */
proto.model.OrderStatus = {
  NONE: 0,
  LIVE: 1,
  FILLED: 2,
  CANCELLED: 3
};

goog.object.extend(exports, proto.model);
